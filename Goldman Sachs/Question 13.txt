// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    string decodedString(string s){
        // code here
        int n=s.length();
        stack<int>integerstack;
        stack<char>stringstack;
        string temp="";string result="";
        for(int i=0;i<n;i++){
            int cnt=0;
            if(s[i]>='0'&&s[i]<='9'){
                while(s[i]>='0'&&s[i]<='9'){
                    cnt=cnt*10+s[i]-'0';
                    i++;
                }
                i--;
                integerstack.push(cnt);
            }
            else if(s[i]=='['){
                if(s[i-1]>='0'&&s[i-1]<='9'){
                    stringstack.push(s[i]);
                }
                else{
                    stringstack.push(s[i]);
                    integerstack.push(1);
                }
            }
            else if(s[i]==']'){
                temp="";
                cnt=0;
                if(!integerstack.empty()){
                    cnt=integerstack.top();
                    integerstack.pop();
                }
                while(!stringstack.empty()&&stringstack.top()!='['){
                    temp=stringstack.top()+temp;
                    stringstack.pop();
                }
                if(!stringstack.empty()&&stringstack.top()=='[')
                stringstack.pop();
                
                for(int j=0;j<cnt;j++){
                    result=result+temp;
                }
                for(int j=0;j<result.length();j++){
                    stringstack.push(result[j]);
                }
                result="";
            }
            else{
                stringstack.push(s[i]);
            }
            
        }
        while(!stringstack.empty()){
            result=stringstack.top()+result;
            stringstack.pop();
        }
        return result;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        string s;
        cin>>s;
        
        Solution ob;
        cout<<ob.decodedString(s)<<"\n";
    }
    return 0;
}  // } Driver Code Ends